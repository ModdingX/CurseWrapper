import java.nio.file.Files

apply plugin: 'application'
apply plugin: 'maven-publish'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

dependencies {
    implementation 'net.sf.jopt-simple:jopt-simple:5.0.4'
    implementation 'com.sparkjava:spark-core:2.9.3'
    implementation 'com.google.guava:guava:31.0.1-jre'
    
    implementation 'org.slf4j:slf4j-api:1.7.33'
    runtimeOnly 'org.slf4j:slf4j-jdk14:1.7.33'
}

sourceSets {
    docker {
        java.srcDirs = []
        resources.srcDirs = [ project.file('src/docker') ]
    }
}

application.mainClassName = "io.github.noeppi_noeppi.tools.cursewrapper.Main"

jar {
    manifest.attributes([
            "Main-Class": application.mainClassName,
            "Automatic-Module-Name": "io.github.noeppi_noeppi.tools.cursewrapper.server"
    ])
}

task collectDependencies {
    doFirst {
        Files.createDirectories(project.file('build').toPath())
        Writer writer = Files.newBufferedWriter(project.file('build/deps.txt').toPath())
        var processDeps
        processDeps = { Project p ->
            p.configurations.runtimeClasspath.getAllDependencies().forEach { dep ->
                if (dep instanceof ExternalModuleDependency) {
                    writer.write("${dep.group}:${dep.name}:${dep.version}\n")
                } else if (dep instanceof ProjectDependency) {
                    processDeps(dep.dependencyProject)
                } else {
                    throw new IllegalStateException("Invalid dependency: ${dep}")
                }
            }
        }
        processDeps(project)
        writer.close()
    }
}

task dockerZip(type: Zip) {
    dependsOn jar
    dependsOn collectDependencies
    
    classifier 'docker'
    
    from(jar.archiveFile, { rename { 'server.jar' } })
    from(project.file('build/deps.txt'), { rename { 'deps.txt' } })
    from(rootProject.file('gradle'), { into('gradle') })
    from(rootProject.file('gradlew'), { rename { 'gradlew' } })
    from sourceSets.docker.resources
}

build.dependsOn(dockerZip)

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact dockerZip
            groupId = project.group
            artifactId = project.name
            version = project.version
            pom {
                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "https://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
            }
        }
    }

    repositories {
        maven {
            url rootProject.file('../MinecraftUtilities/maven')
        }
    }
}
